These tests are under llvm@11.

ruletest.cpp is a rule write in C

ruletest.ll is the rule in llvm IR generated by llvm command from command line, using:
$clang -O3 -S -emit-llvm ruletest.cpp

ruletest.bc is the rule in llvm IR bitcode generated by llvm command from command line, using:
$llvm-as ruletest.ll

llvmtest.cpp is the file to generate llvm IR in C using llvm-C-API. To compile this cpp, use the command:
$clang++ -g llvmtest.cpp $(/usr/local/opt/llvm/bin/llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native orcjit) -rdynamic -O3 -o llvmtest
(Make sure to change the correct path of your llvm@11)

And then run the following command:
$./llvmtest

The output from the command line is the llvm IR module and it will also save as a file in bitcode, named test.bc

And then use the following command to change the test.bc to test.ll:
$llvm-dis test.bc

Here, it is also ok to generate the ruletest.ll from ruletest.bc using the same command:
$llvm-dis ruletest.bc

The ruletest.ll generated here should be the same as previous ruletest.ll.

main.cpp is used to test the bitcode generated by llvm, using the following command:
$clang++ -g main.cpp $(/usr/local/opt/llvm@11/bin/llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native orcjit) -rdynamic -O3 -o main
(Make sure to change the correct path of your llvm@11)

And then run the following command:
$./main

It will give the output in the command line using the function in the bitcode.

llvmcomplextest.cpp is the file to generate more complex llvm IR rules in C using llvm-C-API. To compile this cpp, use the command:
$clang++ -g llvmcomplextest.cpp $(/usr/local/opt/llvm/bin/llvm-config --cxxflags --ldflags --system-libs --libs core mcjit native orcjit) -rdynamic -O3 -o llvmcomplextest
(Make sure to change the correct path of your llvm@11)

And then run the following command:
$./llvmcomplextest

The output from the command line is the llvm IR module and it will also save as a file in bitcode, named complextest.bc

If do need to check the complextest.ll, use the same command/method as shown before.

rule1.bc, rule2.bc, rule3.bc, rule4.bc and rule5.bc are the decision tree rules used on this whole test project, generated by llvm-JIT with the method shown above.